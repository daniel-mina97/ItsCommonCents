package JPanels;

import DataManagement.DataHandler;
import DataManagement.DatabaseConnection;import org.jfree.chart.Graph;
import org.jfree.ui.RefineryUtilities;
;

public class GraphDataPanel extends javax.swing.JPanel {

    private final DataHandler database;

    public GraphDataPanel(DatabaseConnection connection) {
        initComponents();
        Graph budgetGraph = new Graph("Budget Graph");
        budgetGraph.pack();
        RefineryUtilities.centerFrameOnScreen(budgetGraph);
        budgetGraph.setVisible(true);
        database = new DataHandler(connection);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        graphDataPanel = new javax.swing.JPanel();
        graphDataLabel = new javax.swing.JLabel();

        graphDataPanel.setBackground(new java.awt.Color(255, 255, 255));
        graphDataPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        graphDataPanel.setName(""); // NOI18N
        graphDataPanel.setPreferredSize(new java.awt.Dimension(426, 371));

        graphDataLabel.setText("Graph of Data");

        javax.swing.GroupLayout graphDataPanelLayout = new javax.swing.GroupLayout(graphDataPanel);
        graphDataPanel.setLayout(graphDataPanelLayout);
        graphDataPanelLayout.setHorizontalGroup(
            graphDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graphDataPanelLayout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addComponent(graphDataLabel)
                .addContainerGap(227, Short.MAX_VALUE))
        );
        graphDataPanelLayout.setVerticalGroup(
            graphDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graphDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(graphDataLabel)
                .addContainerGap(347, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 526, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(graphDataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 371, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(graphDataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel graphDataLabel;
    private javax.swing.JPanel graphDataPanel;
    // End of variables declaration//GEN-END:variables
}
